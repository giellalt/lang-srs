load transcriptor-cw-eng-verb-entry2inflected-phrase-w-flags.fomabin
define crk2eng

define crkSubjectTags [ "0Sg+" | "1Sg+" | "2Sg+" | "3Sg+" | "4Sg+" | "1Du+" | "2Du+" | "3Du+" | "1Distr+" | "2Distr+" | "3Distr+" | "1Pl+" | "21Pl+" | "2Pl+" | "3Pl+" | "4Pl+" | "4Sg/Pl+" | "5Sg/Pl+" | "X+" | "XPl+" ] ;

define crkObjectTags [ "0SgO+" | "1SgO+" | "2SgO+" | "3SgO+" | "4SgO+" | "1DuO+" | "2DuO+" | "3DuO+" | "1DistrO+" | "2DistrO+" | "3DistrO+" | "1PlO+" | "21PlO+" | "2PlO+" | "3PlO+" | "4PlO+" | "4Sg/PlO+" | "5Sg/PlO+" | "XO+" | "XPlO+" ] ;

define crkIndirectObjectTags [ "1SgIO+" | "2SgIO+" | "3SgIO+" | "4SgIO+" | "1DuIO+" | "2DuIO+" | "3DuIO+" | "1DistrIO+" | "2DistrIO+" | "3DistrIO+" | "1PlIO+" | "21PlIO+" | "2PlIO+" | "3PlIO+" | "4PlIO+" | "4Sg/PlIO+" | "5Sg/PlIO+" | "XIO+" | "XPlIO+" ] ;

define crkTenseAspectTags [ "Prs+" | "Prt+" | "Fut+" | "Def+" | "Prog+" | "Rept+" | "Neg+" ] ;

define srsSubjectTags [ "SbjSg1+" | "SbjSg2+" | "SbjSg3+" | "SbjSg4+" | "SbjDu1+" | "SbjDu2+" | "SbjDu3+" | "SbjPl1+" | "SbjPl2+" | "SbjPl3+" | "SbjPl4+" ] ;

define srsObjectTags [ "DObjSg1+" | "DObjSg2+" | "DObjSg3+" | "DObjSg4+" | "DObjDu1+" | "DObjDu2+" | "DObjDu3+" | "DObjPl1+" | "DObjPl2+" | "DObjPl3+" | "DObjPl4+" ] ;

define srsIObjectTags [ "IObjSg1+" | "IObjSg2+" | "IObjSg3+" | "IObjSg4+" | "IObjDu1+" | "IObjDu2+" | "IObjDu3+" | "IObjPl1+" | "IObjPl2+" | "IObjPl3+" | "IObjPl4+" ] ;

define crkVerbClasses [ "II+" | "AI+" | "TI+" | "TA+" ] ;

define srsAspectTags [ "Ipfv+" | "Ifpv2+" | "Ipfv3+" | "Pfv+" | "Prog+" | "Rep+" ] ;

define srsOtherTags [ "Neg+" | "Distr+" ] ;

define srsTags [ srsAspectTags | srsSubjectTags | srsObjectTags | srsIObjectTags | srsOtherTags ] ;

regex [ [ "TI+" | "TA+" ] -> "D+" || _ ?* crkSubjectTags crkObjectTags srsIObjectTags ( "Neg+" ) ] ;
define DitransitiveTag

regex [ [ "TI+" | "TA+" ] -> "T+" || _ ?* crkSubjectTags [ crkObjectTags | srsIObjectTags ] ( "Neg+" ) .#. ] ;
define TransitiveTag

regex [ [ "AI+" | "II+" ] -> "I+" || _ ?* crkSubjectTags ( "Neg+" ) .#. ] ;
define IntransitiveTag

define ValencyTag [ DitransitiveTag .o. TransitiveTag .o. IntransitiveTag ] ;

regex [ [..] -> "Rept+" || .#. \[ " " ]* "Rep+" \[ " " ]* _ " " ]
.o. [ "Rep+" -> 0 ] ;
define RepetitiveTag

regex [ "Ipfv+" -> "Def+" , "Ipfv2+" -> "Fut+" , "Ipfv3+" -> "Prs+" ] ;
define ImperfectiveTag

regex [ [ "Pfv+" ] -> "Prt+" ] ;
define PerfectiveTag

regex [ [..] -> "Prog+" || .#. \[ " " ]* "Prog+" \[ " " ]* _ " " ]
.o. [ "Prog+" -> "Prs+" || .#. _ ]
.o. [ "Prog+" -> 0 || .#. \[ " " ]+ _ \[ " " ] ] ;
define ProgressiveTag

regex [ [..] -> "Ipfv+" || .#. _ \[ "Ipfv+" | "Ipfv2+" | "Ipfv3+" | "Pfv+" | "Prog+" ] ] ;
define DefaultAspectTag

define AspectTag [ DefaultAspectTag .o. ImperfectiveTag .o. PerfectiveTag .o. ProgressiveTag .o. RepetitiveTag ] ;

regex [ "SbjPl1+" "Distr+" -> "1Distr+"
,, "SbjPl2+" "Distr+" -> "2Distr+"
,, "SbjPl3+" "Distr+" -> "3Distr+" ]
.o. [ "SbjSg1+" -> "1Sg+"
,, "SbjSg2+" -> "2Sg+"
,, "SbjSg3+" -> "3Sg+"
,, "SbjSg4+" -> "X+"
,, "SbjDu1+" -> "1Du+"
,, "SbjDu2+" -> "2Du+"
,, "SbjDu3+" -> "3Du+"
,, "SbjPl1+" -> "1Pl+"
,, "SbjPl2+" -> "2Pl+"
,, "SbjPl3+" -> "3Pl+"
,, "SbjPl4+" -> "XPl+"
] ;
define SubjectConversion

regex [ "DObjPl1+" "Distr+" -> "1DistrO+"
,, "DObjPl2+" "Distr+" -> "2DistrO+"
,, "DObjPl3+" "Distr+" -> "3DistrO+" ]
.o. [ "DObjSg1+" -> "1SgO+"
,, "DObjSg2+" -> "2SgO+"
,, "DObjSg3+" -> "3SgO+"
,, "DObjSg4+" -> "XO+"
,, "DObjDu1+" -> "1DuO+"
,, "DObjDu2+" -> "2DuO+"
,, "DObjDu3+" -> "3DuO+"
,, "DObjPl1+" -> "1PlO+"
,, "DObjPl2+" -> "2PlO+"
,, "DObjPl3+" -> "3PlO+"
,, "DObjPl4+" -> "XPlO+"
] ;
define ObjectConversion

regex [ "IObjPl1+" "Distr+" -> "1DistrIO+"
,, "IObjPl2+" "Distr+" -> "2DistrIO+"
,, "IObjPl3+" "Distr+" -> "3DistrIO+" ]
.o. [ "IObjSg1+" -> "1SgIO+"
,, "IObjSg2+" -> "2SgIO+"
,, "IObjSg3+" -> "3SgIO+"
,, "IObjSg4+" -> "XIO+"
,, "IObjDu1+" -> "1DuIO+"
,, "IObjDu2+" -> "2DuIO+"
,, "IObjDu3+" -> "3DuIO+"
,, "IObjPl1+" -> "1PlIO+"
,, "IObjPl2+" -> "2PlIO+"
,, "IObjPl3+" -> "3PlIO+"
,, "IObjPl4+" -> "XPlIO+"
] ;
define IObjectConversion


regex [ [..] -> "Neg+" || "Neg+" \[ " " ]* _ ] .o. [ "Neg+" -> 0 || _ \[ " " ] ] ;
define finalizeNegation

set flag-is-epsilon ON

regex [ AspectTag
.o. SubjectConversion
.o. ObjectConversion
.o. IObjectConversion
.o. finalizeNegation
.o. crk2eng
] ;

